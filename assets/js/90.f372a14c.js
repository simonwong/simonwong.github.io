(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{404:function(t,v,_){"use strict";_.r(v);var a=_(27),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"v8工作原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v8工作原理"}},[t._v("#")]),t._v(" V8工作原理")]),t._v(" "),_("h2",{attrs:{id:"栈空间和堆空间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#栈空间和堆空间"}},[t._v("#")]),t._v(" 栈空间和堆空间")]),t._v(" "),_("p",[t._v("JS 是一门"),_("strong",[t._v("弱类型、动态")]),t._v("的语言")]),t._v(" "),_("ul",[_("li",[t._v("弱类型：意味着不需要告诉js引擎数据类型，它会自动判断")]),t._v(" "),_("li",[t._v("动态：同一个变量可以保存不同类型的数据")])]),t._v(" "),_("h3",{attrs:{id:"内存空间"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存空间"}},[t._v("#")]),t._v(" 内存空间")]),t._v(" "),_("p",[t._v("js 内存模型包含："),_("strong",[t._v("代码空间、栈空间、堆空间")])]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210609153211.png",alt:""}})]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("原始类型")]),t._v("是直接保存在"),_("strong",[t._v("栈空间")]),t._v("中的，会随着当前栈元素的弹出而销毁")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("引用类型")]),t._v("的值是存在"),_("strong",[t._v("堆空间")]),t._v("的")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("栈空间都不会设置太大，主要用来存放一些原始类型的小数据")])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("堆空间很大，能存放很多大的数据")])])])]),t._v(" "),_("h3",{attrs:{id:"在谈闭包"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在谈闭包"}},[t._v("#")]),t._v(" 在谈闭包")]),t._v(" "),_("p",[t._v("代码同"),_("RouterLink",{attrs:{to:"/share/浏览器工作原理与实践/浏览器中JS的执行机制.html#闭包"}},[t._v("上一模块的闭包")])],1),t._v(" "),_("ol",[_("li",[t._v("当JavaScript引擎执行到foo函数时，首先会编译，并创建一个空执行上下文。")]),t._v(" "),_("li",[t._v("在编译过程中，遇到内部函数setName，JavaScript引擎还要对内部函数做一次快速的词法扫描，发现该内部函数引用了foo函数中的myName变量，由于是内部函数引用了外部函数的变量，所以JavaScript引擎判断这是一个闭包，于是在堆空间创建换一个“closure(foo)”的对象（这是一个内部对象，JavaScript是无法访问的），用来保存myName变量。")]),t._v(" "),_("li",[t._v("接着继续扫描到getName方法时，发现该函数内部还引用变量test1，于是JavaScript引擎又将test1添加到“closure(foo)”对象中。这时候堆中的“closure(foo)”对象中就包含了myName和test1两个变量了。")]),t._v(" "),_("li",[t._v("由于test2并没有被内部函数引用，所以test2依然保存在调用栈中。")])]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210609153722.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"垃圾回收机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),_("h3",{attrs:{id:"调用栈的数据回收"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#调用栈的数据回收"}},[t._v("#")]),t._v(" 调用栈的数据回收")]),t._v(" "),_("p",[_("strong",[t._v("通过向下移动ESP来销毁该函数保存在栈中的执行上下文")])]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210609203430.jpg",alt:""}})]),t._v(" "),_("h3",{attrs:{id:"堆的回收"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#堆的回收"}},[t._v("#")]),t._v(" 堆的回收")]),t._v(" "),_("p",[t._v("将会用到垃圾回收器")]),t._v(" "),_("h4",{attrs:{id:"代际假说"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#代际假说"}},[t._v("#")]),t._v(" "),_("strong",[t._v("代际假说")])]),t._v(" "),_("ul",[_("li",[t._v("大部分对象在内存中存在的时间很短，")]),t._v(" "),_("li",[t._v("不死的对象会活得更久")])]),t._v(" "),_("h4",{attrs:{id:"新生代垃圾回收器-副垃圾回收器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#新生代垃圾回收器-副垃圾回收器"}},[t._v("#")]),t._v(" 新生代垃圾回收器（副垃圾回收器）")]),t._v(" "),_("p",[_("strong",[t._v("Scavenge算法")]),t._v("：新生代空间对半划分为两个区域，一半是对象区域，一半是空闲区域")]),t._v(" "),_("ul",[_("li",[t._v("对象区域快被写满时，就需要执行一次垃圾清理")]),t._v(" "),_("li",[t._v("对对象区域中的垃圾做标记")]),t._v(" "),_("li",[t._v("标记完成之后，就进入垃圾清理阶段，把这些存活的对象复制到空闲区域，并排列起来（内存整理）")]),t._v(" "),_("li",[t._v("完成复制后，对象区域与空闲区域进行角色翻转")])]),t._v(" "),_("p",[_("strong",[t._v("为了执行效率，一般新生区的空间会被设置得比较小")]),t._v("。")]),t._v(" "),_("p",[t._v("因为新生代空间小，容易存满，所以有 "),_("strong",[t._v("对象晋升策略")])]),t._v(" "),_("p",[t._v("经过两次垃圾回收依然还存活的对象，会被移动到老生区中。")]),t._v(" "),_("h4",{attrs:{id:"老生区-主垃圾回收器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#老生区-主垃圾回收器"}},[t._v("#")]),t._v(" 老生区（主垃圾回收器）")]),t._v(" "),_("p",[t._v("主垃圾回收器是采用**标记-清除（Mark-Sweep）**的算法进行垃圾回收")]),t._v(" "),_("ol",[_("li",[t._v("标记阶段从一组根元素开始，递归遍历，能达到的标记为"),_("strong",[t._v("活动对象")]),t._v("，达不到的标记为"),_("strong",[t._v("垃圾数据")])]),t._v(" "),_("li",[t._v("将标记为垃圾数据的清除")]),t._v(" "),_("li",[t._v("由于清除导致内存不连续，所以"),_("strong",[t._v("标记-整理（Mark-Compact）")])])]),t._v(" "),_("h4",{attrs:{id:"全停顿"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#全停顿"}},[t._v("#")]),t._v(" 全停顿")]),t._v(" "),_("p",[t._v("当对大量数据进行回收时，会造成整个主线程阻塞，所以"),_("strong",[t._v("增量标记（Incremental Marking）算法")])]),t._v(" "),_("h2",{attrs:{id:"编译器和解释器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#编译器和解释器"}},[t._v("#")]),t._v(" 编译器和解释器")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210610144431.png",alt:""}})]),t._v(" "),_("p",[t._v("编译型语言：c/c++ 、go")]),t._v(" "),_("p",[t._v("解释型语言：python、js")]),t._v(" "),_("h3",{attrs:{id:"v8-是如何执行一段-js-代码的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v8-是如何执行一段-js-代码的"}},[t._v("#")]),t._v(" V8 是如何执行一段 js 代码的")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210610153911.png",alt:""}})]),t._v(" "),_("p",[t._v("V8在执行过程中既有"),_("strong",[t._v("解释器Ignition")]),t._v("，又有"),_("strong",[t._v("编译器TurboFan")])]),t._v(" "),_("p",[t._v("步骤")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("词法语法分析，生成抽象语法树（AST）和执行上下文")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("分词（tokenize）")]),t._v("，即词法分析")]),t._v(" "),_("li",[_("strong",[t._v("解析（parse）")]),t._v("，即语法分析")])])]),t._v(" "),_("li",[_("p",[t._v("生成字节码")]),t._v(" "),_("p",[_("strong",[t._v("字节码就是介于AST和机器码之间的一种代码。")])]),t._v(" "),_("p",[t._v("占用空间远远小于机器码")])]),t._v(" "),_("li",[_("p",[t._v("执行代码")]),t._v(" "),_("p",[t._v("即时编译（JIT）")])])])])}),[],!1,null,null,null);v.default=s.exports}}]);