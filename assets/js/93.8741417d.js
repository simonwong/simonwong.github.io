(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{403:function(t,v,_){"use strict";_.r(v);var s=_(27),e=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"浏览器的循环系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的循环系统"}},[t._v("#")]),t._v(" 浏览器的循环系统")]),t._v(" "),_("h2",{attrs:{id:"消息队列和事件循环系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#消息队列和事件循环系统"}},[t._v("#")]),t._v(" 消息队列和事件循环系统")]),t._v(" "),_("p",[t._v("系统的逐步完善，与解决问题的过程")]),t._v(" "),_("ol",[_("li",[_("p",[_("strong",[t._v("单线程")]),t._v("可以处理好确定的任务，但是无法处理新增的任务")])]),t._v(" "),_("li",[_("p",[t._v("采用"),_("strong",[t._v("事件循环")]),t._v("监听是否有新的"),_("strong",[t._v("事件")]),t._v("，但是无法处理其他线程的任务")])]),t._v(" "),_("li",[_("p",[t._v("引入"),_("strong",[t._v("消息队列")]),t._v("，"),_("strong",[t._v("IO 线程")]),t._v("产生的任务添加到消息队列，"),_("strong",[t._v("渲染主线程")]),t._v("循环读取消息队列并执行")])]),t._v(" "),_("li",[_("p",[t._v("渲染主线程会有专门的 "),_("strong",[t._v("IO 线程")]),t._v("，用来"),_("strong",[t._v("接受其他进程的的消息")])]),t._v(" "),_("p",[t._v("然而，消息队列中有非常多的消息类型：")]),t._v(" "),_("p",[t._v("输入事件（鼠标滚动点击等等）、微任务、文件读写、Websocket、js 定时器等等。")]),t._v(" "),_("p",[t._v("还有页面相关的 JS 执行、解析 DOM、样式布局计算、css 动画。")]),t._v(" "),_("p",[t._v("这些任务都是在主线程执行的。")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("单线程还会有问题")])]),t._v(" "),_("ol",[_("li",[_("p",[t._v("如何处理高优先级任务，比如 DOM 的频繁变化")]),t._v(" "),_("p",[t._v("使用"),_("strong",[t._v("微任务")]),t._v("权衡，"),_("strong",[t._v("消息队列的每个任务为一个宏任务，每个宏任务包含一个微任务队列")])])]),t._v(" "),_("li",[_("p",[t._v("如何解决单任务长时间占据主线程")]),t._v(" "),_("p",[t._v("Js  采用回调功能避免")])])])])]),t._v(" "),_("h2",{attrs:{id:"settimeout-是如何实现的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-是如何实现的"}},[t._v("#")]),t._v(" setTimeout 是如何实现的")]),t._v(" "),_("p",[t._v("除了正常使用的消息队列，还维护了一个"),_("strong",[t._v("延迟消息队列")]),t._v("。")]),t._v(" "),_("ul",[_("li",[t._v("js 调用 setTimeout ，渲染进程会创建回调任务，包含倒计时时间等信息，并放入延迟消息队列。")]),t._v(" "),_("li",[t._v("当前的任务执行完后，会查看延迟消息队列，一次执行已经到期的队列。")])]),t._v(" "),_("p",[t._v("使用注意事项")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("长时间的任务会阻塞 setTimeout")])]),t._v(" "),_("li",[_("p",[t._v("setTImeout 被嵌套调用 5 次以上后，")])]),t._v(" "),_("li",[_("p",[t._v("未激活页面，最小执行间隔 1000 毫秒")]),t._v(" "),_("p",[t._v("为了优化后台页面的消耗")])]),t._v(" "),_("li",[_("p",[t._v("执行延迟最大时间")]),t._v(" "),_("p",[t._v("浏览器以32bit存储，所以最大是 2147483647 毫秒，超过会溢出，立即执行")])]),t._v(" "),_("li",[_("p",[t._v("回调 this 不符合直觉，使用 箭头函数，或者 bind")])])]),t._v(" "),_("h2",{attrs:{id:"xmlhttprequest-是如何实现的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-是如何实现的"}},[t._v("#")]),t._v(" XMLHttpRequest 是如何实现的")]),t._v(" "),_("h3",{attrs:{id:"异步回调函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#异步回调函数"}},[t._v("#")]),t._v(" 异步回调函数")]),t._v(" "),_("ul",[_("li",[t._v("把异步函数做成一个任务，添加到消息队列队尾")]),t._v(" "),_("li",[t._v("把异步函数添加到微任务队列")])]),t._v(" "),_("h3",{attrs:{id:"xmlhttprequest-运作过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest-运作过程"}},[t._v("#")]),t._v(" XMLHttpRequest 运作过程")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210616105745.png",alt:""}})]),t._v(" "),_("ol",[_("li",[t._v("创建 XMLHttpRequest 对象")]),t._v(" "),_("li",[t._v("注册回调函数，"),_("code",[t._v("onerror")]),t._v("、"),_("code",[t._v("ontimeout")]),t._v("、"),_("code",[t._v("onreadystatechange")])]),t._v(" "),_("li",[t._v("配置请求信息")]),t._v(" "),_("li",[_("code",[t._v("xhr.send")]),t._v(" 发送请求")])]),t._v(" "),_("h2",{attrs:{id:"微任务和宏任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微任务和宏任务"}},[t._v("#")]),t._v(" 微任务和宏任务")]),t._v(" "),_("h3",{attrs:{id:"宏任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#宏任务"}},[t._v("#")]),t._v(" 宏任务")]),t._v(" "),_("ul",[_("li",[t._v("渲染事件（解析 DOM、计算布局、绘制）")]),t._v(" "),_("li",[t._v("用户交互事件（鼠标点击、滚动页面、resize）")]),t._v(" "),_("li",[t._v("JS 脚本执行事件")]),t._v(" "),_("li",[t._v("网络请求完成、文件读写完成事件")])]),t._v(" "),_("p",[_("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-processing-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("WHATWG 规范"),_("OutboundLink")],1)]),t._v(" "),_("ul",[_("li",[t._v("先从多个消息队列中选出一个最老的任务，这个任务称为oldestTask；")]),t._v(" "),_("li",[t._v("然后循环系统记录任务开始执行的时间，并把这个oldestTask设置为当前正在执行的任务；")]),t._v(" "),_("li",[t._v("当任务执行完成之后，删除当前正在执行的任务，并从对应的消息队列中删除掉这个oldestTask；")]),t._v(" "),_("li",[t._v("最后统计执行完成的时长等信息。")])]),t._v(" "),_("h3",{attrs:{id:"微任务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微任务"}},[t._v("#")]),t._v(" 微任务")]),t._v(" "),_("p",[t._v("产生微任务有两种方式")]),t._v(" "),_("ul",[_("li",[t._v("MutationObserver 监控 DOM 节点")]),t._v(" "),_("li",[t._v("使用 promise")])]),t._v(" "),_("h3",{attrs:{id:"mutationobserver采用了-异步-微任务-的策略。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#mutationobserver采用了-异步-微任务-的策略。"}},[t._v("#")]),t._v(" MutationObserver采用了“"),_("strong",[t._v("异步+微任务")]),t._v("”的策略。")]),t._v(" "),_("ul",[_("li",[t._v("通过"),_("strong",[t._v("异步")]),t._v("操作解决了同步操作的"),_("strong",[t._v("性能问题")]),t._v("；")]),t._v(" "),_("li",[t._v("通过"),_("strong",[t._v("微任务")]),t._v("解决了"),_("strong",[t._v("实时性的问题")]),t._v("。")])]),t._v(" "),_("h2",{attrs:{id:"promise"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),_("ol",[_("li",[t._v("Promise中为什么要引入微任务？")]),t._v(" "),_("li",[t._v("Promise中是如何实现回调函数返回值穿透的？")]),t._v(" "),_("li",[t._v("Promise出错后，是怎么通过“冒泡”传递给最后那个捕获异常的函数？")])]),t._v(" "),_("h2",{attrs:{id:"async-await"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[t._v("#")]),t._v(" async/await")])])}),[],!1,null,null,null);v.default=e.exports}}]);