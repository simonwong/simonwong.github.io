"use strict";(self.webpackChunknote=self.webpackChunknote||[]).push([[8340],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},l=Object.keys(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(r=0;r<l.length;r++)t=l[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var u=r.createContext({}),p=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},c=function(n){var e=p(n.components);return r.createElement(u.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,l=n.originalType,u=n.parentName,c=i(n,["components","mdxType","originalType","parentName"]),s=p(t),d=a,k=s["".concat(u,".").concat(d)]||s[d]||m[d]||l;return t?r.createElement(k,o(o({ref:e},c),{},{components:t})):r.createElement(k,o({ref:e},c))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var l=t.length,o=new Array(l);o[0]=s;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=n,i.mdxType="string"==typeof n?n:a,o[1]=i;for(var p=2;p<l;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7216:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return s}});var r=t(7462),a=t(3366),l=(t(7294),t(3905)),o=["components"],i={},u="\u7b97\u6cd5\u5206\u4eab",p={unversionedId:"share/\u7b97\u6cd5\u5206\u4eab\u9012\u5f52\u5230\u6811\u5230\u52a8\u6001\u89c4\u5212",id:"share/\u7b97\u6cd5\u5206\u4eab\u9012\u5f52\u5230\u6811\u5230\u52a8\u6001\u89c4\u5212",isDocsHomePage:!1,title:"\u7b97\u6cd5\u5206\u4eab",description:"\u9012\u5f52 Recursion",source:"@site/docs/share/\u7b97\u6cd5\u5206\u4eab\u9012\u5f52\u5230\u6811\u5230\u52a8\u6001\u89c4\u5212.md",sourceDirName:"share",slug:"/share/\u7b97\u6cd5\u5206\u4eab\u9012\u5f52\u5230\u6811\u5230\u52a8\u6001\u89c4\u5212",permalink:"/docs/share/\u7b97\u6cd5\u5206\u4eab\u9012\u5f52\u5230\u6811\u5230\u52a8\u6001\u89c4\u5212",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/share/\u7b97\u6cd5\u5206\u4eab\u9012\u5f52\u5230\u6811\u5230\u52a8\u6001\u89c4\u5212.md",tags:[],version:"current",frontMatter:{},sidebar:"share",previous:{title:"\u5e38\u89c1\u7684\u51fd\u6570\u7ec4\u5408",permalink:"/docs/share/\u5e38\u89c1\u7684\u51fd\u6570\u7ec4\u5408"},next:{title:"\u7eaf\u51fd\u6570",permalink:"/docs/share/\u7eaf\u51fd\u6570"}},c=[{value:"\u9012\u5f52 Recursion",id:"\u9012\u5f52-recursion",children:[{value:"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee",id:"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee",children:[]},{value:"\u89e3\u9898",id:"\u89e3\u9898",children:[]},{value:"\u4ee3\u7801\u6846\u67b6",id:"\u4ee3\u7801\u6846\u67b6",children:[]},{value:"\u53ef\u4ee5 get \u7684\u70b9",id:"\u53ef\u4ee5-get-\u7684\u70b9",children:[]}]},{value:"\u6811 Tree",id:"\u6811-tree",children:[{value:"\u6811\u7684\u5206\u7c7b",id:"\u6811\u7684\u5206\u7c7b",children:[]},{value:"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee",id:"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee-1",children:[]},{value:"\u9898\u89e3",id:"\u9898\u89e3",children:[]}]},{value:"\u52a8\u6001\u89c4\u5212\uff08Dynamic Programming\uff09\u5165\u95e8 - \u80cc\u5305\u95ee\u9898",id:"\u52a8\u6001\u89c4\u5212dynamic-programming\u5165\u95e8---\u80cc\u5305\u95ee\u9898",children:[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[]},{value:"\u4ece\u6590\u6ce2\u90a3\u5951\u6570\u5f00\u59cb\u5165\u95e8",id:"\u4ece\u6590\u6ce2\u90a3\u5951\u6570\u5f00\u59cb\u5165\u95e8",children:[]},{value:"\u96f6\u94b1\u5151\u6362",id:"\u96f6\u94b1\u5151\u6362",children:[]}]},{value:"\u4f18\u5316\uff08\u88c5\u903c\uff09\u6280\u5de7",id:"\u4f18\u5316\u88c5\u903c\u6280\u5de7",children:[]}],m={toc:c};function s(n){var e=n.components,t=(0,a.Z)(n,o);return(0,l.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u7b97\u6cd5\u5206\u4eab"},"\u7b97\u6cd5\u5206\u4eab"),(0,l.kt)("h2",{id:"\u9012\u5f52-recursion"},"\u9012\u5f52 Recursion"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6307\u5728",(0,l.kt)("a",{parentName:"p",href:"https://zh.wikipedia.org/wiki/%E5%87%BD%E6%95%B0"},"\u51fd\u6570"),"\u7684\u5b9a\u4e49\u4e2d\u4f7f\u7528\u51fd\u6570\u81ea\u8eab\u7684\u65b9\u6cd5")),(0,l.kt)("p",null,"\u672c\u8eab\u5176\u5b9e\u6ca1\u5565\u597d\u8bb2\u7684"),(0,l.kt)("h3",{id:"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee"},"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/recursive-mulitply-lcci/"},"\u9012\u5f52\u4e58\u6cd5")),(0,l.kt)("h3",{id:"\u89e3\u9898"},"\u89e3\u9898"),(0,l.kt)("h4",{id:"\u9012\u5f52\u4e58\u6cd5"},"\u9012\u5f52\u4e58\u6cd5"),(0,l.kt)("p",null,"\u89e3 1\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// \u5bb9\u6613\u5806\u6808\u6ea2\u51fa\n// \u5224\u65ad A B \u5927\u5c0f\u51cf\u5c11\u9012\u5f52\u6b21\u6570\nconst multiplyRecursionAdd = function(A, B) {\n    if (A === 0) {\n        return 0\n    }\n    return B + multiply(A - 1, B)\n}\n")),(0,l.kt)("p",null,"\u89e32:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"9 * 10")," ="),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(4 * 10) + (5 * 10)")," ="),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"(4 * 10) + (4 * 10) + 10")," ="),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const multiply = function (A, B) {\n  // \u51cf\u5c11\u9012\u5f52\u6b21\u6570\n  if (A > B) {\n    return calculate(B, A)\n  }\n  return calculate(A, B)\n}\n\nconst calculate = function (a, b) {\n  if (a == 0) {\n    return 0\n  }\n  if (a == 1) {\n    return b\n  }\n  const halfA = a >> 1\n  const halfAResult = calculate(halfA, b)\n  return halfAResult + halfAResult + (a & 1 == 1 ? b : 0);\n}\n")),(0,l.kt)("h3",{id:"\u4ee3\u7801\u6846\u67b6"},"\u4ee3\u7801\u6846\u67b6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function Foo (p) {\n    // \u8fb9\u754c\u6761\u4ef6\n    if p then\n        return\n    end if\n    // \u8c03\u7528\u81ea\u8eab\u9012\u5f52\n    Foo(p)\n}\n")),(0,l.kt)("h3",{id:"\u53ef\u4ee5-get-\u7684\u70b9"},"\u53ef\u4ee5 get \u7684\u70b9"),(0,l.kt)("p",null,"\u8fb9\u754c\u6761\u4ef6"),(0,l.kt)("p",null,"\u5de5\u5177\u51fd\u6570\uff0c\u5148\u5904\u7406\u8fb9\u754c\uff08\u5f02\u5e38\uff09\u903b\u8f91\uff0c\u4e4b\u540e\u7684\u903b\u8f91\u5c31\u90fd\u662f\u6b63\u5e38\u903b\u8f91\u3002"),(0,l.kt)("p",null,"\u5904\u7406\u65b9\u5f0f\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"return"),"\u3001",(0,l.kt)("inlineCode",{parentName:"p"},"throw")),(0,l.kt)("h2",{id:"\u6811-tree"},"\u6811 Tree"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6811\u662f\u4e00\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\uff08ADT\uff09\u6216\u662f\u5b9e\u73b0\u8fd9\u79cd\u62bd\u8c61\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u6a21\u62df\u5177\u6709\u6811\u72b6\u7ed3\u6784\u6027\u8d28\u7684\u6570\u636e\u96c6\u5408\u3002\u5b83\u662f\u7531 n (n > 0) \u4e2a\u6709\u9650\u8282\u70b9\u7ec4\u6210\u4e00\u4e2a\u5177\u6709\u5c42\u6b21\u5173\u7cfb\u7684\u96c6\u5408\u3002")),(0,l.kt)("h3",{id:"\u6811\u7684\u5206\u7c7b"},"\u6811\u7684\u5206\u7c7b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e8c\u53c9\u6811",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5e73\u8861\u4e8c\u53c9\u6811"),(0,l.kt)("li",{parentName:"ul"},"\u4e8c\u53c9\u67e5\u627e\u6811"),(0,l.kt)("li",{parentName:"ul"},"\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"AVL \u6811"),(0,l.kt)("li",{parentName:"ul"},"\u7ea2\u9ed1\u6811"))),(0,l.kt)("li",{parentName:"ul"},"\u5b8c\u5168\u4e8c\u53c9\u6811"),(0,l.kt)("li",{parentName:"ul"},"\u6ee1\u4e8c\u53c9\u6811"))),(0,l.kt)("li",{parentName:"ul"},"\u591a\u8def\u67e5\u627e\u6811"),(0,l.kt)("li",{parentName:"ul"},"\u5806",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5927/\u5c0f\u9876\u5806"),(0,l.kt)("li",{parentName:"ul"},"..."))),(0,l.kt)("li",{parentName:"ul"},"...")),(0,l.kt)("h3",{id:"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee-1"},"\u63a8\u8350\u7ec3\u4e60\u9898\u76ee"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/"},"\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/n-ary-tree-postorder-traversal/"},"N\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/"},"\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/"}," \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8fdb\u9636")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"},"\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811")),(0,l.kt)("p",null,"..."),(0,l.kt)("p",null,"\xb7"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"http://file.wangsijie.top/blog/20200808111444.jpg",alt:null})),(0,l.kt)("p",null,"\u524d\u5e8f\u904d\u5386\uff1aABDECFG\n\u4e2d\u5e8f\u904d\u5386\uff1aDBEAFCG\n\u540e\u5e8f\u904d\u5386\uff1aDEBFGCA\n\u5c42\u5e8f\u904d\u5386\uff1aABCDEFG"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u524d\u5e8f\u904d\u5386"),"\uff08\u5148\u5e8f\u904d\u5386\uff09 \uff1a\u81ea\u9876\u5411\u4e0b\uff0c\u4ece\u5de6\u5f80\u53f3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * \u524d\u5e8f\u904d\u5386 -- \u9012\u5f52\u5199\u6cd5\n */\nfunction preOrder(TreeNode root) {\n    if root == null then\n        return\n    end if\n    \n    // TODO: \u524d\u5e8f\u904d\u5386\n    inOrder(root.left);\n    inOrder(root.right);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u524d\u5e8f\u904d\u5386 -- \u5229\u7528\u6808 \u8fed\u4ee3\n */\nclass Solution {\n    void preOrder(TreeNode root) {\n    }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u4e2d\u5e8f\u904d\u5386")),(0,l.kt)("p",null,"\u5982\u679c\u662f\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5728\u4e2d\u5e8f\u904d\u5386\u7684\u7ed3\u679c\u5c31\u662f\u9012\u589e\u6392\u5e8f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n *  \n */\nfunction inOrder(TreeNode root) {\n    if root == null then\n        return\n    end if\n        \n    inOrder(root.left);\n    // TODO \u4e2d\u5e8f\u904d\u5386\n    inOrder(root.right);\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * \u4e2d\u5e8f\u904d\u5386 -- \u5229\u7528\u6808 \u8fed\u4ee3\n */\nfunction inOrder(TreeNode root) {\n    stack <- new Stack()\n    current = root\n       \n    while current != null or !stack.isEmpty() do\n        while current != null do\n            stack.push(curr);\n            curr = curr.left;\n        end\n\n        curr = stack.pop();\n        // TODO \u4e2d\u5e8f\u904d\u5386\n        curr = curr.right;\n    end\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u540e\u5e8f\u904d\u5386")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u540e\u5e8f\u904d\u5386 -- \u9012\u5f52\u5199\u6cd5\n */\nfunction postOrder(TreeNode root) {\n    if root == null then\n        return\n    end if\n        \n    inOrder(root.left);\n    inOrder(root.right);\n    // TODO \u540e\u5e8f\u904d\u5386\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u540e\u5e8f\u904d\u5386 -- \u5229\u7528\u6808 \u8fed\u4ee3\n */\nfunction postOrder (root) {\n  const stack = [];\n  let prev = null;\n\n  while (root != null || stack.length > 0) {\n    while (root != null) {\n      stack.push(root);\n      root = root.left;\n    }\n    root = stack.pop();\n    if (root.right == null || root.right === prev) {\n      // TODO: \u540e\u5e8f\u904d\u5386\n      prev = root\n      root = null\n    } else {\n      stack.push(root)\n      root = root.right\n    }\n  }\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5c42\u5e8f\u904d\u5386")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u5c42\u5e8f\u904d\u5386 -- \u5229\u7528\u961f\u5217\u8f85\u52a9\n */\nclass Solution {\n    void levelOrder(TreeNode root) {\n    }\n}\n")),(0,l.kt)("h3",{id:"\u9898\u89e3"},"\u9898\u89e3"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"var maxDepth = function(root) {\n  if (root == null) {\n    return 0\n  }\n  return Math.max(maxDepth(root.left), maxDepth(root.right)) + 1\n}\n")),(0,l.kt)("h2",{id:"\u52a8\u6001\u89c4\u5212dynamic-programming\u5165\u95e8---\u80cc\u5305\u95ee\u9898"},"\u52a8\u6001\u89c4\u5212\uff08Dynamic Programming\uff09\u5165\u95e8 - \u80cc\u5305\u95ee\u9898"),(0,l.kt)("h3",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/fibonacci-number/"},"\u6590\u6ce2\u90a3\u5951\u6570")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/coin-change/"},"\u96f6\u94b1\u5151\u6362")),(0,l.kt)("p",null,"\u8fdb\u9636"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/coin-change-2/"},"\u96f6\u94b1\u5151\u6362 II")),(0,l.kt)("h3",{id:"\u4ece\u6590\u6ce2\u90a3\u5951\u6570\u5f00\u59cb\u5165\u95e8"},"\u4ece\u6590\u6ce2\u90a3\u5951\u6570\u5f00\u59cb\u5165\u95e8"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66b4\u529b\u89e3\u6cd5")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"function fib (N) {\n    if (N === 1 || N === 2) return 1;\n    return fib(N - 1) + fib(N - 2);\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u501f\u52a9 \u54c8\u5e0c\u8868 \u5b58\u50a8\u7ed3\u679c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"class SolutionWithHashMap {\n  public int fib(int N) {\n    if (N < 1) {\n      return 0;\n    }\n\n    HashMap<Integer, Integer> memo = new HashMap<>();\n\n    return helper(memo, N);\n  }\n\n  int helper (HashMap<Integer, Integer> memo, int N) {\n    if (N == 0) {\n      return 0;\n    }\n    if (N == 1 || N == 2) {\n      return 1;\n    }\n\n    if (memo.get(N) != null) {\n      return memo.get(N);\n    }\n    memo.put(N, helper(memo, N - 1) + helper(memo, N - 2));\n    return memo.get(N);\n  }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 dp table \u5b58\u50a8")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"class SolutionWithDpTable {\n  public int fib(int N) {\n    ArrayList<Integer> dp = new ArrayList<>(N + 1);\n\n    dp.add(0);\n    dp.add(1);\n    dp.add(1);\n\n    for (int i = 3; i <= N; i++) {\n      dp.add(dp.get(i - 1) + dp.get(i - 2));\n    }\n    return dp.get(N);\n  }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u72b6\u6001\u538b\u7f29\uff0c\u56e0\u4e3a\u6bcf\u6b21\u53ea\u7528\u5230\u4e86 dp table \u7684\u6700\u540e\u4e24\u4e2a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n  public int fib(int N) {\n    if (N == 0) return 0;\n    if (N == 1 || N == 2) return 1;\n\n    int prev = 1;\n    int curr = 1;\n\n    for (int i = 3; i <= N; i++) {\n      int sum = prev + curr;\n      prev = curr;\n      curr = sum;\n    }\n    return curr;\n  }\n}\n")),(0,l.kt)("h3",{id:"\u96f6\u94b1\u5151\u6362"},"\u96f6\u94b1\u5151\u6362"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66b4\u529b\u89e3\u6cd5")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u66b4\u529b\u904d\u5386\n */\nclass SolutionDp {\n  public int coinChange(int[] coins, int amount) {\n    if (amount == 0) {\n      return 0;\n    }\n    return getMinCoinNumber(coins, amount, 0);\n  }\n\n  int getMinCoinNumber (int[] coins, int amount, int num) {\n    int res = Integer.MAX_VALUE;\n    int nothingNum = 0;\n\n    for (int i = 0; i < coins.length; i++) {\n      int nextAmount = amount - coins[i];\n\n      if (nextAmount == 0) {\n        res = Math.min(res, num + 1);\n      } else if (nextAmount < 0) {\n        // -1\n        nothingNum += 1;\n      } else {\n        res = Math.min(res, getMinCoinNumber(coins, nextAmount, num + 1));\n      }\n    }\n    if (nothingNum == coins.length) {\n      return -1;\n    }\n    return res;\n  }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5e26\u5907\u5fd8\u5f55\u7684\u81ea\u4e0a\u800c\u4e0b")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u5e26\u5907\u5fd8\u5f55\u7684\u9012\u5f52\uff08\u81ea\u4e0a\u800c\u4e0b\uff09\n */\nclass SolutionDpWidthMemo {\n  public int coinChange(int[] coins, int amount) {\n    HashMap<Integer, Integer> memo = new HashMap<>();\n    return dp(coins, amount, memo);\n  }\n\n  int dp (int[] coins, int amount, HashMap<Integer, Integer> memo) {\n    // base case\n    if (amount == 0) {\n      return 0;\n    }\n    if (amount < 0) {\n      return -1;\n    }\n\n    if (memo.get(amount) != null) {\n      return memo.get(amount);\n    }\n\n    int res = Integer.MAX_VALUE;\n    for (int i = 0; i < coins.length; i++) {\n      int subProblem = dp(coins, amount - coins[i], memo);\n      if (subProblem == -1) {\n        continue;\n      }\n      res = Math.min(res, subProblem + 1);\n    }\n\n    if (res == Integer.MAX_VALUE) {\n      memo.put(amount, -1);\n      return -1;\n    }\n    memo.put(amount, res);\n\n    return res;\n  }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"dp table \u8fed\u4ee3\uff08\u81ea\u4e0b\u800c\u4e0a\uff09")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"class Solution {\n  public int coinChange(int[] coins, int amount) {\n    int[] dp = new int[amount + 1];\n    Arrays.fill(dp, amount + 1);\n\n    dp[0] = 0;\n\n    for (int i = 1; i < dp.length; i++) {\n      for (int coin : coins) {\n        if (i - coin < 0) {\n          continue;\n        }\n        dp[i] = Math.min(dp[i], 1 + dp[i - coin]);\n      }\n    }\n    return (dp[amount] == amount + 1) ? -1 : dp[amount];\n  }\n}\n")),(0,l.kt)("h2",{id:"\u4f18\u5316\u88c5\u903c\u6280\u5de7"},"\u4f18\u5316\uff08\u88c5\u903c\uff09\u6280\u5de7"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"Math.floor(a / 2)"),"  \u76f8\u5f53\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"a >> 1")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"a % 2"),"  \u76f8\u5f53\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"a & 1")))}s.isMDXComponent=!0}}]);