(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{406:function(t,v,_){"use strict";_.r(v);var a=_(27),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"宏观视角下的浏览器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#宏观视角下的浏览器"}},[t._v("#")]),t._v(" 宏观视角下的浏览器")]),t._v(" "),_("h2",{attrs:{id:"chrome架构一个页面4个进程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#chrome架构一个页面4个进程"}},[t._v("#")]),t._v(" Chrome架构一个页面4个进程")]),t._v(" "),_("h3",{attrs:{id:"并行处理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#并行处理"}},[t._v("#")]),t._v(" 并行处理")]),t._v(" "),_("p",[t._v("第一步，使用三个线程分别执行三个任务")]),t._v(" "),_("p",[t._v("第二部，显示结果")]),t._v(" "),_("h3",{attrs:{id:"线程-进程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#线程-进程"}},[t._v("#")]),t._v(" 线程 进程")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210604095019.png",alt:""}})]),t._v(" "),_("p",[t._v("线程依附于进程，而进程中使用多线程并行处理能提升运算效率。")]),t._v(" "),_("p",[_("strong",[t._v("4个特点")])]),t._v(" "),_("ol",[_("li",[t._v("进程中的任意线程执行出错会导致整个进程崩溃")]),t._v(" "),_("li",[t._v("线程之间共享进程中的数据")]),t._v(" "),_("li",[t._v("一个进程关闭后，操作系统会回收进程所占内存")]),t._v(" "),_("li",[t._v("进程之间内容隔离")])]),t._v(" "),_("h3",{attrs:{id:"目前多进程架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#目前多进程架构"}},[t._v("#")]),t._v(" 目前多进程架构")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210604095658.png",alt:""}})]),t._v(" "),_("ul",[_("li",[t._v("浏览器进程。负责界面显示、用户交互、子进程管理。提供存储等功能")]),t._v(" "),_("li",[t._v("渲染进程。核心任务是将 html 、css、js 转换为用户可以交互的网页，Blink 和 js 引擎 v8 都运行在该进程中。Chrome 会为每个 Tab 创建一个渲染进程（同站点，即相同协议和根域名，会使用同一个渲染进程），并运行在沙箱模式下")]),t._v(" "),_("li",[t._v("GPU 进程。刚开始没有这个进程，随后需要GPU绘制的需求成为普遍需求，而引进")]),t._v(" "),_("li",[t._v("网络进程。主要负责页面的网络资源加载，直至最近才独立出来")]),t._v(" "),_("li",[t._v("插件进程。负责插件的运行，因插件易崩溃，所以隔离出来，避免影响浏览器和页面")])]),t._v(" "),_("h2",{attrs:{id:"浏览器缓存和http过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存和http过程"}},[t._v("#")]),t._v(" 浏览器缓存和http过程")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210604154550.png",alt:""}})]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210604154559.png",alt:""}})]),t._v(" "),_("h2",{attrs:{id:"从输入url到页面展示-中间发生了什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#从输入url到页面展示-中间发生了什么"}},[t._v("#")]),t._v(" 从输入URL到页面展示，中间发生了什么")]),t._v(" "),_("p",[t._v("自说自话：浏览器主进程接收到 URL 地址后，交给网络进程请求，将相应的数据传递给渲染引擎，然后渲染引擎会解析 css、html，渲染成最终的页面。")]),t._v(" "),_("ul",[_("li",[t._v("首先，浏览器进程接收到用户输入的URL请求，浏览器进程便将该URL转发给网络进程。")]),t._v(" "),_("li",[t._v("然后，在网络进程中发起真正的URL请求。")]),t._v(" "),_("li",[t._v("接着网络进程接收到了响应头数据，便解析响应头数据，并将数据转发给浏览器进程。")]),t._v(" "),_("li",[t._v("浏览器进程接收到网络进程的响应头数据之后，发送“提交导航(CommitNavigation)”消息到渲染进程；")]),t._v(" "),_("li",[t._v("渲染进程接收到“提交导航”的消息之后，便开始准备接收HTML数据，接收数据的方式是直接和网络进程建立数据管道；")]),t._v(" "),_("li",[t._v("最后渲染进程会向浏览器进程“确认提交”，这是告诉浏览器进程：“已经准备好接受和解析页面数据了”。")]),t._v(" "),_("li",[t._v("浏览器进程接收到渲染进程“提交文档”的消息之后，便开始移除之前旧的文档，然后更新浏览器进程中的页面状态。")])]),t._v(" "),_("h2",{attrs:{id:"渲染流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#渲染流程"}},[t._v("#")]),t._v(" 渲染流程")]),t._v(" "),_("ol",[_("li",[t._v("渲染进程将HTML内容转换为能够读懂的"),_("strong",[t._v("DOM树")]),t._v("结构。")]),t._v(" "),_("li",[t._v("渲染引擎将CSS样式表转化为浏览器可以理解的"),_("strong",[t._v("styleSheets")]),t._v("，计算出DOM节点的样式。")]),t._v(" "),_("li",[t._v("创建"),_("strong",[t._v("布局树")]),t._v("，并计算元素的布局信息。")]),t._v(" "),_("li",[t._v("对布局树进行分层，并生成"),_("strong",[t._v("分层树")]),t._v("。")]),t._v(" "),_("li",[t._v("为每个图层生成"),_("strong",[t._v("绘制列表")]),t._v("，并将其提交到合成线程。")]),t._v(" "),_("li",[t._v("合成线程将图层分成"),_("strong",[t._v("图块")]),t._v("，并在"),_("strong",[t._v("光栅化线程池")]),t._v("中将图块转换成位图。")]),t._v(" "),_("li",[t._v("合成线程发送绘制图块命令"),_("strong",[t._v("DrawQuad")]),t._v("给浏览器进程。")]),t._v(" "),_("li",[t._v("浏览器进程根据DrawQuad消息"),_("strong",[t._v("生成页面")]),t._v("，并"),_("strong",[t._v("显示")]),t._v("到显示器上。")])]),t._v(" "),_("p",[_("img",{attrs:{src:"http://file.wangsijie.top/blog/20210607142620.png",alt:""}})]),t._v(" "),_("h3",{attrs:{id:"重排"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重排"}},[t._v("#")]),t._v(" 重排")]),t._v(" "),_("p",[t._v("更新了元素的几何信息，如改变元素的宽高。")]),t._v(" "),_("p",[_("strong",[t._v("重排需要更新完整的渲染流水线，开销最大")])]),t._v(" "),_("h3",{attrs:{id:"重绘"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[t._v("#")]),t._v(" 重绘")]),t._v(" "),_("p",[t._v("更新元素的绘制属性，例如背景颜色")]),t._v(" "),_("p",[_("strong",[t._v("重绘省去了布局和分层阶段，所以执行效率比重排高")])]),t._v(" "),_("h3",{attrs:{id:"直接合成阶段"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#直接合成阶段"}},[t._v("#")]),t._v(" 直接合成阶段")]),t._v(" "),_("p",[t._v("更改一个既不用布局也不用绘制的属性，会避开布局绘制阶段，直接来到合成。例如 transform 属性")]),t._v(" "),_("p",[_("strong",[t._v("合成能大大提升绘制效率")])])])}),[],!1,null,null,null);v.default=s.exports}}]);